#!/bin/bash
# This is a simple build script and will be executed on your CI system if 
# available.  Otherwise it will execute while your application is stopped
# before the deploy step.  This script gets executed directly, so it
# could be python, php, ruby, etc.

# Exit on first error.
set -e

# Trace each line.
# set -x

NGINX_VERSION='1.4.4'
PYTHON_VERSION='3.3.3'
PCRE_VERSION='8.34'
ROOT_DIR=${OPENSHIFT_DATA_DIR}
BUILD_DIR=${OPENSHIFT_TMP_DIR}build/
BIN_DIR=${OPENSHIFT_DATA_DIR}bin/
PYTHON_TEMP=${OPENSHIFT_TMP_DIR}python/
PYTHON_FILE=Python-${PYTHON_VERSION}.tar.bz2
PYTHON_URL=http://www.python.org/ftp/python/${PYTHON_VERSION}/${PYTHON_FILE}
PYTHON_TMP=${OPENSHIFT_TMP_DIR}python/
PYTHON_DIST_URL=http://python-distribute.org/distribute_setup.py

# OpenShift sets GIT_DIR to . which terminates pull with an error:
# Not a git repository: '.'
unset GIT_DIR

umask 077

function install_nginx() {
    mkdir -p ${BUILD_DIR}
    pushd ${BUILD_DIR}
    local pkg=nginx-${NGINX_VERSION}.tar.gz

    echo "Downloading ${pkg}."
    wget http://nginx.org/download/${pkg}
    echo "Unpacking ${pkg}."
    tar xfz ${pkg}
    pushd nginx-${NGINX_VERSION}

    echo "Downloading pcre."
    wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-${PCRE_VERSION}.tar.bz2
    echo "Unpacking pcre."
    tar xfj pcre-${PCRE_VERSION}.tar.bz2

    echo "Configuring nginx."
    ./configure --with-pcre=./pcre-${PCRE_VERSION} \
        --prefix=${ROOT_DIR}

    echo "Compiling nginx."
    make install
    popd
    popd
    echo "Cleaning build directory."
    rm -rf ${BUILD_DIR}
}

function check_nginx() {
    local nginx_bin=${ROOT_DIR}sbin/nginx

    if [[ ! -a ${nginx_bin} ]]; then
        echo "nginx not installed."
        install_nginx
    else
        local nginx_version=`${nginx_bin} -v 2>&1|cut -d/ -f2`

        if [[ ${NGINX_VERSION} != ${nginx_version} ]]; then
            echo "nginx old, version: ${nginx_version}."
            install_nginx
        else
            echo "nginx up to date, version: ${nginx_version}."
        fi
    fi
}

function install_python() {
    echo "Aha!"
    mkdir -p ${PYTHON_TEMP}
    pushd ${PYTHON_TEMP}

    echo "Downloading ${PYTHON_FILE}"
    wget ${PYTHON_URL}
    echo "Unpacking ${PYTHON_FILE}"
    tar xfj ${PYTHON_FILE}
    pushd Python-${PYTHON_VERSION}

    echo "Configuring Python"

    popd
    popd
    echo "Cleaning Python build directory"
    rm -rf ${PYTHON_TEMP}
}

function check_python() {
    local python_bin=${BIN_DIR}python

    if [[ ! -a ${python_bin} ]]; then
        echo "python3 not installed."
        install_python
    else
        local python_version=`${python_bin} --version 2>&1|cut -d/ -f2`

        if [[ ${PYTHON_VERSION} != ${python_version} ]]; then
            echo "Python old, version: ${python_version}."
            install_python
        else
            echo "python up to date, version: ${python_version}."
        fi
    fi
}

check_nginx
check_python

exit 0
